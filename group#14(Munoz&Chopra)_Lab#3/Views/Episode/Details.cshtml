@model group_14_Munoz_Chopra__Lab_3.Models.ViewModels.EpisodeDetailsViewModel
@inject IHttpContextAccessor HttpContextAccessor

@{
    ViewData["Title"] = "Episode Details";
    var currentUser = HttpContextAccessor.HttpContext?.Session.GetString("Username");
}

<div class="container py-5">
    <!-- Back Button -->
    <a asp-controller="Podcast" asp-action="Details" asp-route-id="@Model.PodcastID" class="btn btn-outline-secondary mb-4">
        <i class="bi bi-arrow-left-circle"></i> Back to @Model.PodcastTitle
    </a>

    <!-- Episode Header -->
    <div class="card shadow-sm mb-4">
        <div class="card-body">
            <div class="d-flex align-items-center justify-content-between">
                <h2 class="fw-bold text-primary mb-0">@Model.Title</h2>
                <span class="badge bg-info text-dark px-3 py-2">🎙️ Episode</span>
            </div>
            <p class="text-muted mt-2 mb-0">
                <strong>Release Date:</strong> @Model.ReleaseDate.ToString("yyyy-MM-dd") |
                <strong>Duration:</strong> @Model.DurationMinutes min
            </p>
        </div>
    </div>

    <!-- Audio Player Section -->
    <div class="card shadow-sm mb-4 border-0">
        <div class="card-body text-center bg-light rounded">
            <audio controls class="w-100 rounded" style="outline: none;">
                <source src="@Url.Action("Play", "Audio", new { url = Model.AudioFileURL })" type="audio/mpeg" />
                Your browser does not support the audio element.
            </audio>
        </div>
    </div>

    <!-- Episode Stats -->
    <div class="d-flex flex-wrap gap-3 mb-4">
        <div class="badge bg-success-subtle border text-success px-3 py-2">
            <i class="bi bi-play-circle-fill me-1"></i> Plays: @Model.PlayCount
        </div>
        <div class="badge bg-primary-subtle border text-primary px-3 py-2">
            <i class="bi bi-eye-fill me-1"></i> Views: @Model.NumberOfViews
        </div>
    </div>
    <!-- Episode Stats -->
    <div class="d-flex flex-wrap gap-3 mb-4">
        <div class="badge bg-success-subtle border text-success px-3 py-2">
            <i class="bi bi-play-circle-fill me-1"></i> Plays: @Model.PlayCount
        </div>
        <div class="badge bg-primary-subtle border text-primary px-3 py-2">
            <i class="bi bi-eye-fill me-1"></i> Views: @Model.NumberOfViews
        </div>
    </div>

    <!-- Comments Section -->
    <div class="card shadow-sm border-0 mb-4">
        <div class="card-body">
            <h4 class="fw-semibold mb-3">
                <i class="bi bi-chat-left-dots-fill text-primary me-2"></i> Comments
            </h4>
    <!-- Comments Section -->
    <div class="card shadow-sm border-0 mb-4">
        <div class="card-body">
            <h4 class="fw-semibold mb-3">
                <i class="bi bi-chat-left-dots-fill text-primary me-2"></i> Comments
            </h4>

            <!-- ✅ Feedback Alert -->
            @if (TempData["Message"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["Message"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <!-- Comment Form -->
            <form asp-action="AddComment" method="post" class="mb-4">
                <input type="hidden" name="episodeId" value="@Model.EpisodeID" />
                <textarea name="text" class="form-control rounded-3 mb-2" rows="3" placeholder="Add a comment..." required></textarea>
                <button type="submit" class="btn btn-primary btn-sm rounded-pill px-4">
                    <i class="bi bi-send-fill me-1"></i> Post Comment
                </button>
            </form>

            <!-- Comments List -->
            @if (Model.Comments != null && Model.Comments.Any())
            {
                <div class="list-group">
                    @foreach (var comment in Model.Comments)
                    {
                        var canEdit = (comment.Username == currentUser && (DateTime.UtcNow - comment.Timestamp).TotalHours <= 24);

                        <div class="list-group-item border-0 border-bottom mb-2">
                            <div class="d-flex justify-content-between">
                                <strong class="text-dark">@comment.Username</strong>
                                <small class="text-muted">@comment.Timestamp.ToLocalTime().ToString("MMM dd, yyyy hh:mm tt")</small>
                            </div>

                            <p class="mt-1 mb-0 text-secondary">@comment.Text</p>

                            @if (canEdit)
                            {
                                <form asp-action="EditComment" method="post" class="mt-2 d-flex">
                                    <input type="hidden" name="commentId" value="@comment.CommentID" />
                                    <input type="hidden" name="episodeId" value="@Model.EpisodeID" />
                                    <input name="text" class="form-control me-2" value="@comment.Text" />
                                    <button type="submit" class="btn btn-sm btn-outline-success">
                                        <i class="bi bi-check-circle me-1"></i> Save
                                    </button>
                                </form>
                            }
                        </div>
                    }
                </div>
            }
            else
            {
                <p class="text-muted fst-italic">No comments yet. Be the first to share your thoughts!</p>
            }
        </div>
    </div>
</div>

@section Scripts {
    <!-- ✅ Auto-hide alert after 4 seconds -->
    <script>
        setTimeout(() => {
            const alert = document.querySelector('.alert-success');
            if (alert) {
                alert.classList.remove('show');
                setTimeout(() => alert.remove(), 300);
            }
        }, 4000);
    </script>
}
